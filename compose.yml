# Procfile for Heroku
web: gunicorn app:app --bind 0.0.0.0:$PORT --workers 1 --threads 2 --timeout 120

---
# docker-compose.yml for local development
version: '3.8'

services:
  spam-detector:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
    volumes:
      - ./models:/app/models
    restart: unless-stopped

  frontend:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - spam-detector
    restart: unless-stopped

---
# render.yaml for Render deployment
services:
  - type: web
    name: spam-detector-api
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn app:app --bind 0.0.0.0:$PORT
    envVars:
      - key: FLASK_ENV
        value: production
      - key: PYTHONPATH
        value: /opt/render/project/src

---
# vercel.json for Vercel deployment (frontend only)
{
  "builds": [
    {
      "src": "index.html",
      "use": "@vercel/static"
    }
  ],
  "routes": [
    {
      "src": "/(.*)",
      "dest": "/index.html"
    }
  ],
  "env": {
    "API_URL": "https://your-api-url.herokuapp.com"
  }
}

---
# Railway deployment
# railway.toml
[build]
builder = "DOCKERFILE"

[deploy]
startCommand = "gunicorn app:app --bind 0.0.0.0:$PORT"
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 10

[[deploy.environmentVariables]]
name = "FLASK_ENV"
value = "production"